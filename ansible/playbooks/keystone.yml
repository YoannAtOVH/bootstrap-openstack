---
- hosts: keystone
  vars:
    password: zoblesmouches42
  tasks:
  - name: install memcached
    apt: name={{item}} state=latest
    with_items:
      - memcached
      - python-memcache
  - name: configure memcached
    lineinfile:
      path: /etc/memcached.conf
      regexp: '^-l 127\.0\.0\.1'
      state: absent
    notify:
      - restart memcached
  - name: ensure memcached is running
    service:
      name: memcached
      state: started

  - name: install keystone
    apt: name=keystone state=latest
  - name: configure keystone
    ini_file: path=/etc/keystone/keystone.conf section={{item.section}} option={{item.option}} value={{item.value}}
    with_items:
      - { section: "database", option: "connection", value: "mysql+pymysql://keystone:{{password}}@mysql/keystone" }
      - { section: "token", option: "provider", value: "fernet" }
    notify:
      - restart apache2
  - name: initiate keystone database
    shell: su -s /bin/sh -c "keystone-manage db_sync" keystone && touch /root/.ansible_initiate_keystone_db
    args:
      creates: /root/.ansible_initiate_keystone_db
  - name: initiate keystone fernet keys
    shell: |
      keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone && touch /root/.ansible_initiate_keystone_fernet
    args:
      creates: /root/.ansible_initiate_keystone_fernet
  - name: initiate keystone
    shell: |
      keystone-manage bootstrap --bootstrap-password {{password}} \
        --bootstrap-admin-url http://keystone:35357/v3/ \
        --bootstrap-internal-url http://keystone:5000/v3/ \
        --bootstrap-public-url http://keystone:5000/v3/ \
        --bootstrap-region-id RegionOne && \
      touch /root/.ansible_initiate_keystone
    args:
      creates: /root/.ansible_initiate_keystone
  - name: ensure keystone is running
    service:
      name: keystone
      state: started

  - name: install openstack client
    apt: name=python-openstackclient state=latest
  - name: install python shade
    apt: name=python-shade state=latest
  - name: create openrc_admin file
    vars:
      openrc_user: admin
      openrc_password: "{{password}}"
      openrc_project: admin
    template:
      src: keystone/openrc.j2
      dest: /root/openrc_admin
  - name: create openrc_demo file
    vars:
      openrc_user: demo
      openrc_password: "{{password}}"
      openrc_project: demo
    template:
      src: keystone/openrc.j2
      dest: /root/openrc_demo

  - name: create service project
    shell: |
      source /root/openrc_admin
      openstack project create \
        --domain default \
        --description "Service Project" \
        service
      [ $? -eq 0 ] && touch /root/.ansible_service_project
    args:
      executable: /bin/bash
      creates: /root/.ansible_service_project
  - name: create users for service project
    shell: |
      source /root/openrc_admin
      openstack user create \
        --domain default \
        --password "{{password}}" \
        {{item}}
      [ $? -eq 0 ] && touch /root/.ansible_service_project_{{item}}
    args:
      executable: /bin/bash
      creates: /root/.ansible_service_project_{{item}}
    with_items:
      - nova
      - neutron
      - placement
      - glance
  - name: add admin role to users for service project
    shell: |
      source /root/openrc_admin
      openstack role add \
        --project service \
        --user {{item}} \
        admin
      [ $? -eq 0 ] && touch /root/.ansible_service_project_{{item}}_role
    args:
      executable: /bin/bash
      creates: /root/.ansible_service_project_{{item}}_role
    with_items:
      - nova
      - neutron
      - placement
      - glance

  handlers:
  - name: restart memcached
    service:
      name: memcached
      state: restarted
  - name: restart apache2
    service:
      name: apache2
      state: restarted
